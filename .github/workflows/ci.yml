name: CI and Deploy

on:
  push:
    branches: ["**"]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  WRANGLER_VERSION: '4'

jobs:
  validate:
    name: Validate (lint + test)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
cache-dependency-path: |
            package-lock.json

- name: Install dependencies
        run: npm ci

- name: Lint admin
        run: npm -w management run lint

- name: Test worker
        run: npm -w worker run test

  deploy:
    name: Deploy (production)
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://link.mackhaymond.co
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: |
            package-lock.json
            worker/package-lock.json
            management/package-lock.json

      - name: Install dependencies
        run: npm run install:all

- name: Build worker with embedded admin
        run: |
          echo "Building worker with embedded admin assets..."
          npm -w worker run build:admin

      - name: Deploy with Wrangler
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: worker
          command: deploy --config wrangler.jsonc
          wranglerVersion: ${{ env.WRANGLER_VERSION }}
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GITHUB_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}

      - name: Smoke test deployment
        run: |
          URL="https://link.mackhaymond.co"
          echo "Checking $URL ..."
          curl -s -o /dev/null -w "%{http_code}" "$URL/" | grep -q "200"
          curl -s -o /dev/null -w "%{http_code}" "$URL/admin" | grep -q "200"
        shell: bash
        continue-on-error: true

